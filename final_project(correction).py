# -*- coding: utf-8 -*-
"""final project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l2-Vl5yXmE1qoPXF4rCPlkTEYA-jrWrI
"""

import pandas as pd

x1=pd.read_csv("/content/DDW_B18_0800_NIC_FINAL_STATE_RAJASTHAN-2011.csv",encoding='cp1252')
x1

x2=pd.read_csv("/content/DDW_B18_1200_NIC_FINAL_STATE_ARUNACHAL_PRADESH-2011.csv",encoding='cp1252')
x2

x3=pd.read_csv("/content/DDW_B18_1400_NIC_FINAL_STATE_MANIPUR-2011.csv",encoding='cp1252')
x3

x4=pd.read_csv("/content/DDW_B18_1500_NIC_FINAL_STATE_MIZORAM-2011.csv",encoding='cp1252')
x4

x5=pd.read_csv("/content/DDW_B18_1900_NIC_FINAL_STATE_WEST_BENGAL-2011.csv",encoding='cp1252')
x5

x6=pd.read_csv("/content/DDW_B18sc_0700_NIC_FINAL_STATE_NCT_OF_DELHI-2011.csv",encoding='cp1252')
x6

x7=pd.read_csv("/content/DDW_B18sc_1600_NIC_FINAL_STATE_TRIPURA-2011.csv",encoding='cp1252')
x7

x8=pd.read_csv("/content/DDW_B18sc_2000_NIC_FINAL_STATE_JHARKHAND-2011.csv",encoding='cp1252')
x8

x9=pd.read_csv("/content/DDW_B18sc_2400_NIC_FINAL_STATE_GUJARAT-2011.csv",encoding='cp1252')
x9

x10=pd.read_csv("/content/DDW_B18sc_2700_NIC_FINAL_STATE_MAHARASHTRA-2011.csv",encoding='cp1252')
x10

x11=pd.read_csv("/content/DDW_B18sc_2900_NIC_FINAL_STATE_KARNATAKA-2011.csv",encoding='cp1252')
x11

x12=pd.read_csv("/content/DDW_B18sc_3000_NIC_FINAL_STATE_GOA-2011.csv",encoding='cp1252')
x12

x13=pd.read_csv("/content/DDW_B18sc_3200_NIC_FINAL_STATE_KERALA-2011.csv",encoding='cp1252')
x13

x14=pd.read_csv("/content/DDW_B18sc_3300_NIC_FINAL_STATE_TAMIL_NADU-2011.csv",encoding='cp1252')
x14

x15=pd.read_csv("/content/DDW_B18sc_3400_NIC_FINAL_STATE_PUDUCHERRY-2011.csv",encoding='cp1252')
x15

x16=pd.read_csv("/content/DDW_B18st_0200_NIC_FINAL_STATE_HIMACHAL_PRADESH-2011.csv",encoding='cp1252')
x16

x17=pd.read_csv("/content/DDW_B18st_0500_NIC_FINAL_STATE_UTTARAKHAND-2011.csv",encoding='cp1252')
x17

x18=pd.read_csv("/content/DDW_B18st_0900_NIC_FINAL_STATE_UTTAR_PRADESH-2011.csv",encoding='cp1252')
x18

x19=pd.read_csv("/content/DDW_B18st_1000_NIC_FINAL_STATE_BIHAR-2011.csv",encoding='cp1252')
x19

x20=pd.read_csv("/content/DDW_B18st_1100_NIC_FINAL_STATE_SIKKIM-2011.csv",encoding='cp1252')
x20

x21=pd.read_csv("/content/DDW_B18st_1300_NIC_FINAL_STATE_NAGALAND-2011.csv",encoding='cp1252')
x21

x22=pd.read_csv("/content/DDW_B18st_1800_NIC_FINAL_STATE_ASSAM-2011.csv",encoding='cp1252')
x22

x23=pd.read_csv("/content/DDW_B18st_2100_NIC_FINAL_STATE_ODISHA-2011.csv",encoding='cp1252')
x23

df=pd.concat([x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23],ignore_index=True)
df

df1=df.dropna()
df1

print(df1.head())

print(df1.columns)

df1.dropna(inplace=True)
df1

df1.dtypes

print(df1.duplicated())

df1.drop_duplicates(inplace=True)

# Commented out IPython magic to ensure Python compatibility.
import seaborn as sn
import matplotlib.pyplot as plt
# %matplotlib inline
import scipy.stats as st

df1['Main Workers - Total -  Persons']

#Main Workers - Total - Females,Main Workers - Total - Males
df1["Main Workers - Total - Females"],["Main Workers - Total - Males"]
sn.boxplot(x='Main Workers - Total - Females',y="Main Workers - Total - Males",data=df1)
plt.show()
st.f_oneway(df1["Main Workers - Total - Females"],df1["Main Workers - Total - Males"])

#Main Workers - Rural - Males,Main Workers - Rural - Females
df1["Main Workers - Rural - Males"],["Main Workers - Rural - Females"]
sn.boxplot(x='Main Workers - Rural - Males',y="Main Workers - Rural - Females",data=df1)
plt.show()
st.f_oneway(df1["Main Workers - Rural - Males"],df1["Main Workers - Rural - Females"])

df1["Main Workers - Urban - Males"],["Main Workers - Urban - Females"]
sn.boxplot(x='Main Workers - Urban - Males',y="Main Workers - Urban - Females",data=df1)
plt.show()
st.f_oneway(df1["Main Workers - Urban - Males"],df1["Main Workers - Urban - Females"])

#Marginal workers-Rural-Persons,Marginal workers-Rural-Female
df1["Marginal Workers - Rural -  Persons"],["Main Workers - Rural - Females"]
sn.boxplot(x='Main Workers - Rural -  Persons',y="Main Workers - Rural - Females",data=df1)
plt.show()
st.f_oneway(df1["Main Workers - Rural -  Persons"],df1["Main Workers - Rural - Females"])

#Marginal workers-Total-Persons,Marginal workers-Total-Male
df1["Marginal Workers - Total -  Persons"],["Marginal Workers - Total - Males"]
sn.boxplot(x='Marginal Workers - Total -  Persons',y="Marginal Workers - Total - Males",data=df1)
plt.show()
st.f_oneway(df1["Marginal Workers - Total -  Persons"],df1["Marginal Workers - Total - Males"])

#Marginal workers-Rural-Male,Marginal workers-Rural-Female
df1["Marginal Workers - Rural - Males"],["Marginal Workers - Rural - Females"]
sn.boxplot(x='Marginal Workers - Rural - Males',y="Marginal Workers - Rural - Females",data=df1)
plt.show()
st.f_oneway(df1["Marginal Workers - Rural - Males"],df1["Marginal Workers - Rural - Females"])

#entair full data
sn.boxplot(data=df1,palette='rainbow',orient='h')

#states
df["India/States"].hist(bins=10)

print(df1.info())

state_count=df1.groupby(['State Code', 'NIC Name']).size().reset_index(name='Counts')
print(state_count)



plt.figure(figsize=(12,6))
sn.barplot(x='State Code',y='Counts',hue='NIC Name',data=state_count)
plt.xticks(rotation=90)
plt.xlabel('State Code')
plt.ylabel('Counts')
plt.show()

df[df['NIC Name'].str.contains('rubber')]

df[df['NIC Name'].str.contains('plastic products')]

df[df['NIC Name'].str.contains('chemicals')]

df[df['NIC Name'].str.contains('furniture')]

df[df['NIC Name'].str.contains('constructions of buildings')]

